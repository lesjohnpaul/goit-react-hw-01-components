{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAD\\\\OneDrive - PANGASINAN III ELECTRIC COOPERATIVE\\\\Documents\\\\GitHub\\\\goit-react-hw-01-components\\\\src\\\\components\\\\MenuItem\\\\MenuItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport styles from './MenuItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getClassNameForAvailability = availability => {\n  switch (availability) {\n    case 'Available':\n      return styles.available;\n    case 'Few Left':\n      return styles.fewLeft;\n    case 'Not Available':\n      return styles.notAvailable;\n    case 'Seasonal':\n      return styles.seasonal;\n    default:\n      return '';\n  }\n};\nconst MenuItem = _ref => {\n  let {\n    name,\n    description,\n    imageUrl,\n    price,\n    availability\n  } = _ref;\n  const availabilityClass = getClassNameForAvailability(availability);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.menuItemContainer} ${availabilityClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: name,\n      className: styles.menuItemImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"menuItemName\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `menuItemIcon ${availabilityClass}`,\n        children: /*#__PURE__*/_jsxDEV(AiFillCheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `menuItemDescription ${availabilityClass}`,\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `menuItemPrice ${availabilityClass}`,\n      children: [\"Price: $\", price.individual.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `menuItemPrice ${availabilityClass}`,\n      children: [\"Price of Small $\", price.Small.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n//================================VANILLA CSS APPROACH====================\n// const getClassNameForAvailability = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return 'available';\n//     case 'Few Left':\n//       return 'fewLeft';\n//     case 'Not Available':\n//       return 'notAvailable';\n//     case 'Seasonal':\n//       return 'seasonal';\n//     default:\n//       return '';\n//   }\n// };\n\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//   const availabilityClass = getClassNameForAvailability(availability);\n\n//   return (\n//     <div className={`menuItemContainer ${availabilityClass}`}>\n//       <img\n//         src={imageUrl}\n//         alt={name}\n//         className={`menutItemImage ${availabilityClass}`}\n//       />\n//       <h2 className=\"menuItemName\">\n//         <span className={`menuItemIcon ${availabilityClass}`}>\n//           <AiFillCheckCircle />\n//         </span>\n//         {name}\n//       </h2>\n//       <p className={`menuItemDescription ${availabilityClass}`}>\n//         {description}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price: ${price.individual.toFixed(2)}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price of Small ${price.Small.toFixed(2)}\n//       </p>\n//     </div>\n//   );\n// };\n\n//================================INLINE CSS APPROACH====================\n// const getBgColor = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return '#C5e8d7';\n//     case 'Few Left':\n//       return '#F7e2bc';\n//     case 'Not Available':\n//       return '#e8c5c6';\n//     case 'Seasonal':\n//       return '#c5d4e8';\n//     default:\n//       throw new Error(`Unsupported availability Status - ${availability}`);\n//   }\n// };\n//================================INLINE CSS APPROACH======================\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//inline styles for each element\n//  const styles = {\n//    container: {\n//      marginBottom: '20px',\n//      border: '1px solid #ccc',\n//      padding: '10px',\n//      borderRadius: '5px',\n//      maxWidth: '400px',\n//      marginLeft: 'auto',\n//      marginRight: 'auto',\n//      backgroundColor: getBgColor(availability),\n//    },\n//    image: {\n//      height: '400px',\n//      width: '100%',\n//      objectFit: 'cover',\n//      marginBottom: '10px',\n//    },\n//    name: { fontsize: '24px', fontWeight: 'bold', marginBottom: '10px' },\n//    description: { fontSize: '16px', color: '#666', marginBottom: '10px' },\n//    price: { fontSize: '16px', color: '#333' },\n//    priceSmall: { fontSize: '15px', color: '#313' },\n//  };\n// return (\n//     <div style={styles.container}>\n//       <img src={imageUrl} alt={name} style={styles.image} />\n//       <h2 style={styles.name}>{name}</h2>\n//       <p style={styles.description}>{description}</p>\n//       <p style={styles.price}>Price: ${price.individual.toFixed(2)}</p>\n//       <p style={styles.priceSmall}>Price of Small ${price.Small.toFixed(2)}</p>\n//       <p>{availability}</p>\n//     </div>\n//   );\n// };\n_c = MenuItem;\nMenuItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  price: PropTypes.shape({\n    //shape is to access the nested object\n    individual: PropTypes.number.isRequired\n  }).isRequired\n};\nexport default MenuItem;\nvar _c;\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"names":["React","PropTypes","AiFillCheckCircle","styles","jsxDEV","_jsxDEV","getClassNameForAvailability","availability","available","fewLeft","notAvailable","seasonal","MenuItem","_ref","name","description","imageUrl","price","availabilityClass","className","menuItemContainer","children","src","alt","menuItemImage","fileName","_jsxFileName","lineNumber","columnNumber","individual","toFixed","Small","_c","propTypes","string","isRequired","shape","number","$RefreshReg$"],"sources":["C:/Users/SAD/OneDrive - PANGASINAN III ELECTRIC COOPERATIVE/Documents/GitHub/goit-react-hw-01-components/src/components/MenuItem/MenuItem.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport styles from './MenuItem.module.css';\n\nconst getClassNameForAvailability = availability => {\n  switch (availability) {\n    case 'Available':\n      return styles.available;\n    case 'Few Left':\n      return styles.fewLeft;\n    case 'Not Available':\n      return styles.notAvailable;\n    case 'Seasonal':\n      return styles.seasonal;\n    default:\n      return '';\n  }\n};\nconst MenuItem = ({ name, description, imageUrl, price, availability }) => {\n  const availabilityClass = getClassNameForAvailability(availability);\n\n  return (\n    <div className={`${styles.menuItemContainer} ${availabilityClass}`}>\n      <img src={imageUrl} alt={name} className={styles.menuItemImage} />\n      <h2 className=\"menuItemName\">\n        <span className={`menuItemIcon ${availabilityClass}`}>\n          <AiFillCheckCircle />\n        </span>\n        {name}\n      </h2>\n      <p className={`menuItemDescription ${availabilityClass}`}>\n        {description}\n      </p>\n      <p className={`menuItemPrice ${availabilityClass}`}>\n        Price: ${price.individual.toFixed(2)}\n      </p>\n      <p className={`menuItemPrice ${availabilityClass}`}>\n        Price of Small ${price.Small.toFixed(2)}\n      </p>\n    </div>\n  );\n};\n\n//================================VANILLA CSS APPROACH====================\n// const getClassNameForAvailability = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return 'available';\n//     case 'Few Left':\n//       return 'fewLeft';\n//     case 'Not Available':\n//       return 'notAvailable';\n//     case 'Seasonal':\n//       return 'seasonal';\n//     default:\n//       return '';\n//   }\n// };\n\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//   const availabilityClass = getClassNameForAvailability(availability);\n\n//   return (\n//     <div className={`menuItemContainer ${availabilityClass}`}>\n//       <img\n//         src={imageUrl}\n//         alt={name}\n//         className={`menutItemImage ${availabilityClass}`}\n//       />\n//       <h2 className=\"menuItemName\">\n//         <span className={`menuItemIcon ${availabilityClass}`}>\n//           <AiFillCheckCircle />\n//         </span>\n//         {name}\n//       </h2>\n//       <p className={`menuItemDescription ${availabilityClass}`}>\n//         {description}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price: ${price.individual.toFixed(2)}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price of Small ${price.Small.toFixed(2)}\n//       </p>\n//     </div>\n//   );\n// };\n\n//================================INLINE CSS APPROACH====================\n// const getBgColor = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return '#C5e8d7';\n//     case 'Few Left':\n//       return '#F7e2bc';\n//     case 'Not Available':\n//       return '#e8c5c6';\n//     case 'Seasonal':\n//       return '#c5d4e8';\n//     default:\n//       throw new Error(`Unsupported availability Status - ${availability}`);\n//   }\n// };\n//================================INLINE CSS APPROACH======================\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//inline styles for each element\n//  const styles = {\n//    container: {\n//      marginBottom: '20px',\n//      border: '1px solid #ccc',\n//      padding: '10px',\n//      borderRadius: '5px',\n//      maxWidth: '400px',\n//      marginLeft: 'auto',\n//      marginRight: 'auto',\n//      backgroundColor: getBgColor(availability),\n//    },\n//    image: {\n//      height: '400px',\n//      width: '100%',\n//      objectFit: 'cover',\n//      marginBottom: '10px',\n//    },\n//    name: { fontsize: '24px', fontWeight: 'bold', marginBottom: '10px' },\n//    description: { fontSize: '16px', color: '#666', marginBottom: '10px' },\n//    price: { fontSize: '16px', color: '#333' },\n//    priceSmall: { fontSize: '15px', color: '#313' },\n//  };\n// return (\n//     <div style={styles.container}>\n//       <img src={imageUrl} alt={name} style={styles.image} />\n//       <h2 style={styles.name}>{name}</h2>\n//       <p style={styles.description}>{description}</p>\n//       <p style={styles.price}>Price: ${price.individual.toFixed(2)}</p>\n//       <p style={styles.priceSmall}>Price of Small ${price.Small.toFixed(2)}</p>\n//       <p>{availability}</p>\n//     </div>\n//   );\n// };\nMenuItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  price: PropTypes.shape({\n    //shape is to access the nested object\n    individual: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MenuItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,2BAA2B,GAAGC,YAAY,IAAI;EAClD,QAAQA,YAAY;IAClB,KAAK,WAAW;MACd,OAAOJ,MAAM,CAACK,SAAS;IACzB,KAAK,UAAU;MACb,OAAOL,MAAM,CAACM,OAAO;IACvB,KAAK,eAAe;MAClB,OAAON,MAAM,CAACO,YAAY;IAC5B,KAAK,UAAU;MACb,OAAOP,MAAM,CAACQ,QAAQ;IACxB;MACE,OAAO,EAAE;EACb;AACF,CAAC;AACD,MAAMC,QAAQ,GAAGC,IAAA,IAA0D;EAAA,IAAzD;IAAEC,IAAI;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,KAAK;IAAEV;EAAa,CAAC,GAAAM,IAAA;EACpE,MAAMK,iBAAiB,GAAGZ,2BAA2B,CAACC,YAAY,CAAC;EAEnE,oBACEF,OAAA;IAAKc,SAAS,EAAG,GAAEhB,MAAM,CAACiB,iBAAkB,IAAGF,iBAAkB,EAAE;IAAAG,QAAA,gBACjEhB,OAAA;MAAKiB,GAAG,EAAEN,QAAS;MAACO,GAAG,EAAET,IAAK;MAACK,SAAS,EAAEhB,MAAM,CAACqB;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEvB,OAAA;MAAIc,SAAS,EAAC,cAAc;MAAAE,QAAA,gBAC1BhB,OAAA;QAAMc,SAAS,EAAG,gBAAeD,iBAAkB,EAAE;QAAAG,QAAA,eACnDhB,OAAA,CAACH,iBAAiB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,EACNd,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACLvB,OAAA;MAAGc,SAAS,EAAG,uBAAsBD,iBAAkB,EAAE;MAAAG,QAAA,EACtDN;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACJvB,OAAA;MAAGc,SAAS,EAAG,iBAAgBD,iBAAkB,EAAE;MAAAG,QAAA,GAAC,UAC1C,EAACJ,KAAK,CAACY,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACJvB,OAAA;MAAGc,SAAS,EAAG,iBAAgBD,iBAAkB,EAAE;MAAAG,QAAA,GAAC,kBAClC,EAACJ,KAAK,CAACc,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAI,EAAA,GAxHMpB,QAAQ;AAyHdA,QAAQ,CAACqB,SAAS,GAAG;EACnBnB,IAAI,EAAEb,SAAS,CAACiC,MAAM,CAACC,UAAU;EACjCpB,WAAW,EAAEd,SAAS,CAACiC,MAAM,CAACC,UAAU;EACxCnB,QAAQ,EAAEf,SAAS,CAACiC,MAAM,CAACC,UAAU;EACrClB,KAAK,EAAEhB,SAAS,CAACmC,KAAK,CAAC;IACrB;IACAP,UAAU,EAAE5B,SAAS,CAACoC,MAAM,CAACF;EAC/B,CAAC,CAAC,CAACA;AACL,CAAC;AAED,eAAevB,QAAQ;AAAC,IAAAoB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module"}