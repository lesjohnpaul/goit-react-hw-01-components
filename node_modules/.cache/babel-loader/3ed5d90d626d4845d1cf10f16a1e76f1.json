{"ast":null,"code":"import React from'react';import{AiFillCheckCircle}from'react-icons/ai';import styles from'./MenuItem.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getClassNameForAvailability=function getClassNameForAvailability(availability){switch(availability){case'Available':return styles.available;case'Few Left':return styles.fewLeft;case'Not Available':return styles.notAvailable;case'Seasonal':return styles.seasonal;default:return'';}};var MenuItem=function MenuItem(_ref){var name=_ref.name,description=_ref.description,imageUrl=_ref.imageUrl,price=_ref.price,availability=_ref.availability;var availabilityClass=getClassNameForAvailability(availability);return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles.menuItemContainer,\" \").concat(availabilityClass),children:[/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:name,className:styles.menuItemImage}),/*#__PURE__*/_jsxs(\"h2\",{className:styles.menuItemName,children:[/*#__PURE__*/_jsx(AiFillCheckCircle,{className:\"\".concat(styles.menuItemIcon,\" \").concat(availabilityClass)}),name]}),/*#__PURE__*/_jsx(\"p\",{className:styles.menuItemDescription,children:description}),/*#__PURE__*/_jsxs(\"p\",{className:styles.menuItemPrice,children:[\"Price: $\",price.individual.toFixed(2)]})]});};//================================VANILLA CSS APPROACH====================\n// const getClassNameForAvailability = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return 'available';\n//     case 'Few Left':\n//       return 'fewLeft';\n//     case 'Not Available':\n//       return 'notAvailable';\n//     case 'Seasonal':\n//       return 'seasonal';\n//     default:\n//       return '';\n//   }\n// };\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//   const availabilityClass = getClassNameForAvailability(availability);\n//   return (\n//     <div className={`menuItemContainer ${availabilityClass}`}>\n//       <img\n//         src={imageUrl}\n//         alt={name}\n//         className={`menutItemImage ${availabilityClass}`}\n//       />\n//       <h2 className=\"menuItemName\">\n//         <span className={`menuItemIcon ${availabilityClass}`}>\n//           <AiFillCheckCircle />\n//         </span>\n//         {name}\n//       </h2>\n//       <p className={`menuItemDescription ${availabilityClass}`}>\n//         {description}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price: ${price.individual.toFixed(2)}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price of Small ${price.Small.toFixed(2)}\n//       </p>\n//     </div>\n//   );\n// };\n//================================INLINE CSS APPROACH====================\n// const getBgColor = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return '#C5e8d7';\n//     case 'Few Left':\n//       return '#F7e2bc';\n//     case 'Not Available':\n//       return '#e8c5c6';\n//     case 'Seasonal':\n//       return '#c5d4e8';\n//     default:\n//       throw new Error(`Unsupported availability Status - ${availability}`);\n//   }\n// };\n//================================INLINE CSS APPROACH======================\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//inline styles for each element\n//  const styles = {\n//    container: {\n//      marginBottom: '20px',\n//      border: '1px solid #ccc',\n//      padding: '10px',\n//      borderRadius: '5px',\n//      maxWidth: '400px',\n//      marginLeft: 'auto',\n//      marginRight: 'auto',\n//      backgroundColor: getBgColor(availability),\n//    },\n//    image: {\n//      height: '400px',\n//      width: '100%',\n//      objectFit: 'cover',\n//      marginBottom: '10px',\n//    },\n//    name: { fontsize: '24px', fontWeight: 'bold', marginBottom: '10px' },\n//    description: { fontSize: '16px', color: '#666', marginBottom: '10px' },\n//    price: { fontSize: '16px', color: '#333' },\n//    priceSmall: { fontSize: '15px', color: '#313' },\n//  };\n// return (\n//     <div style={styles.container}>\n//       <img src={imageUrl} alt={name} style={styles.image} />\n//       <h2 style={styles.name}>{name}</h2>\n//       <p style={styles.description}>{description}</p>\n//       <p style={styles.price}>Price: ${price.individual.toFixed(2)}</p>\n//       <p style={styles.priceSmall}>Price of Small ${price.Small.toFixed(2)}</p>\n//       <p>{availability}</p>\n//     </div>\n//   );\n// };\nexport default MenuItem;","map":{"version":3,"names":["React","AiFillCheckCircle","styles","jsx","_jsx","jsxs","_jsxs","getClassNameForAvailability","availability","available","fewLeft","notAvailable","seasonal","MenuItem","_ref","name","description","imageUrl","price","availabilityClass","className","concat","menuItemContainer","children","src","alt","menuItemImage","menuItemName","menuItemIcon","menuItemDescription","menuItemPrice","individual","toFixed"],"sources":["C:/Users/SAD/OneDrive - PANGASINAN III ELECTRIC COOPERATIVE/Documents/GitHub/goit-react-hw-01-components/src/components/MenuItem/MenuItem.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport styles from './MenuItem.module.css';\n\nconst getClassNameForAvailability = availability => {\n  switch (availability) {\n    case 'Available':\n      return styles.available;\n    case 'Few Left':\n      return styles.fewLeft;\n    case 'Not Available':\n      return styles.notAvailable;\n    case 'Seasonal':\n      return styles.seasonal;\n    default:\n      return '';\n  }\n};\nconst MenuItem = ({ name, description, imageUrl, price, availability }) => {\n  const availabilityClass = getClassNameForAvailability(availability);\n\n  return (\n    <div className={`${styles.menuItemContainer} ${availabilityClass}`}>\n      <img src={imageUrl} alt={name} className={styles.menuItemImage} />\n      <h2 className={styles.menuItemName}>\n        <AiFillCheckCircle\n          className={`${styles.menuItemIcon} ${availabilityClass}`}\n        />\n        {name}\n      </h2>\n      <p className={styles.menuItemDescription}>{description}</p>\n      <p className={styles.menuItemPrice}>\n        Price: ${price.individual.toFixed(2)}\n      </p>\n    </div>\n  );\n};\n\n//================================VANILLA CSS APPROACH====================\n// const getClassNameForAvailability = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return 'available';\n//     case 'Few Left':\n//       return 'fewLeft';\n//     case 'Not Available':\n//       return 'notAvailable';\n//     case 'Seasonal':\n//       return 'seasonal';\n//     default:\n//       return '';\n//   }\n// };\n\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//   const availabilityClass = getClassNameForAvailability(availability);\n\n//   return (\n//     <div className={`menuItemContainer ${availabilityClass}`}>\n//       <img\n//         src={imageUrl}\n//         alt={name}\n//         className={`menutItemImage ${availabilityClass}`}\n//       />\n//       <h2 className=\"menuItemName\">\n//         <span className={`menuItemIcon ${availabilityClass}`}>\n//           <AiFillCheckCircle />\n//         </span>\n//         {name}\n//       </h2>\n//       <p className={`menuItemDescription ${availabilityClass}`}>\n//         {description}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price: ${price.individual.toFixed(2)}\n//       </p>\n//       <p className={`menuItemPrice ${availabilityClass}`}>\n//         Price of Small ${price.Small.toFixed(2)}\n//       </p>\n//     </div>\n//   );\n// };\n\n//================================INLINE CSS APPROACH====================\n// const getBgColor = availability => {\n//   switch (availability) {\n//     case 'Available':\n//       return '#C5e8d7';\n//     case 'Few Left':\n//       return '#F7e2bc';\n//     case 'Not Available':\n//       return '#e8c5c6';\n//     case 'Seasonal':\n//       return '#c5d4e8';\n//     default:\n//       throw new Error(`Unsupported availability Status - ${availability}`);\n//   }\n// };\n//================================INLINE CSS APPROACH======================\n// const MenuItem = ({ name, description, imageUrl, price, availability }) => {\n//inline styles for each element\n//  const styles = {\n//    container: {\n//      marginBottom: '20px',\n//      border: '1px solid #ccc',\n//      padding: '10px',\n//      borderRadius: '5px',\n//      maxWidth: '400px',\n//      marginLeft: 'auto',\n//      marginRight: 'auto',\n//      backgroundColor: getBgColor(availability),\n//    },\n//    image: {\n//      height: '400px',\n//      width: '100%',\n//      objectFit: 'cover',\n//      marginBottom: '10px',\n//    },\n//    name: { fontsize: '24px', fontWeight: 'bold', marginBottom: '10px' },\n//    description: { fontSize: '16px', color: '#666', marginBottom: '10px' },\n//    price: { fontSize: '16px', color: '#333' },\n//    priceSmall: { fontSize: '15px', color: '#313' },\n//  };\n// return (\n//     <div style={styles.container}>\n//       <img src={imageUrl} alt={name} style={styles.image} />\n//       <h2 style={styles.name}>{name}</h2>\n//       <p style={styles.description}>{description}</p>\n//       <p style={styles.price}>Price: ${price.individual.toFixed(2)}</p>\n//       <p style={styles.priceSmall}>Price of Small ${price.Small.toFixed(2)}</p>\n//       <p>{availability}</p>\n//     </div>\n//   );\n// };\nMenuItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  price: PropTypes.shape({\n    //shape is to access the nested object\n    individual: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MenuItem;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,iBAAiB,KAAQ,gBAAgB,CAClD,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,GAAM,CAAAC,2BAA2B,CAAG,QAA9B,CAAAA,2BAA2BA,CAAGC,YAAY,CAAI,CAClD,OAAQA,YAAY,EAClB,IAAK,WAAW,CACd,MAAO,CAAAN,MAAM,CAACO,SAAS,CACzB,IAAK,UAAU,CACb,MAAO,CAAAP,MAAM,CAACQ,OAAO,CACvB,IAAK,eAAe,CAClB,MAAO,CAAAR,MAAM,CAACS,YAAY,CAC5B,IAAK,UAAU,CACb,MAAO,CAAAT,MAAM,CAACU,QAAQ,CACxB,QACE,MAAO,EAAE,CACb,CACF,CAAC,CACD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAA6D,IAAvD,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAEC,WAAW,CAAAF,IAAA,CAAXE,WAAW,CAAEC,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CAAEC,KAAK,CAAAJ,IAAA,CAALI,KAAK,CAAEV,YAAY,CAAAM,IAAA,CAAZN,YAAY,CAClE,GAAM,CAAAW,iBAAiB,CAAGZ,2BAA2B,CAACC,YAAY,CAAC,CAEnE,mBACEF,KAAA,QAAKc,SAAS,IAAAC,MAAA,CAAKnB,MAAM,CAACoB,iBAAiB,MAAAD,MAAA,CAAIF,iBAAiB,CAAG,CAAAI,QAAA,eACjEnB,IAAA,QAAKoB,GAAG,CAAEP,QAAS,CAACQ,GAAG,CAAEV,IAAK,CAACK,SAAS,CAAElB,MAAM,CAACwB,aAAc,CAAE,CAAC,cAClEpB,KAAA,OAAIc,SAAS,CAAElB,MAAM,CAACyB,YAAa,CAAAJ,QAAA,eACjCnB,IAAA,CAACH,iBAAiB,EAChBmB,SAAS,IAAAC,MAAA,CAAKnB,MAAM,CAAC0B,YAAY,MAAAP,MAAA,CAAIF,iBAAiB,CAAG,CAC1D,CAAC,CACDJ,IAAI,EACH,CAAC,cACLX,IAAA,MAAGgB,SAAS,CAAElB,MAAM,CAAC2B,mBAAoB,CAAAN,QAAA,CAAEP,WAAW,CAAI,CAAC,cAC3DV,KAAA,MAAGc,SAAS,CAAElB,MAAM,CAAC4B,aAAc,CAAAP,QAAA,EAAC,UAC1B,CAACL,KAAK,CAACa,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,EACnC,CAAC,EACD,CAAC,CAEV,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA,cAAe,CAAAnB,QAAQ"},"metadata":{},"sourceType":"module"}